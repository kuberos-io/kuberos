apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuberos-api-server-deployment
  labels:
    app: kuberos-api-server-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuberos-api-server-deployment
  template:
    metadata:
      labels:
        app: kuberos-api-server-deployment
    spec:
      containers:
      - name: kuberos-api-server
        image: metagoto/kuberos:v0.3.1
        imagePullPolicy: Always
        env:
          - name: PORT
            value: "8000"
          - name: REDIS_HOST
            value: redis-service
          - name: POSTGRESQL_HOST
            value: postgres-service
          - name: MODE
            value: production
          - name: DJANGO_ALLOWED_HOSTS
            value: '10.181.120.88'
        ports:
          - containerPort: 8000
            name: gunicorn
        volumeMounts:
          - mountPath: /kuberos/media
            name: data-volume-mount
      volumes:
        - name: data-volume-mount
          persistentVolumeClaim:
            claimName: data-pv-claim
      imagePullSecrets:
        - name: kuberos-test-repo
      nodeSelector:
        kuberos.io/kuberos: kuberos-control-plane
      tolerations: 
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: kuberos-api-server-service
  labels:
    app: kuberos-api-server-service
spec:
  type: NodePort
  selector:
    app: kuberos-api-server-deployment
  ports:
    - port: 8000
      targetPort: 8000
      nodePort: 32600


